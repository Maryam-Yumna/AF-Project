{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-f14e112c049fdba156e1683b582dda5b.js","node_modules/dompurify/dist/purify.js","node_modules/dompurify/src/utils.js","node_modules/dompurify/src/tags.js","node_modules/dompurify/src/attrs.js","node_modules/dompurify/src/regexp.js","node_modules/dompurify/src/purify.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d751713988987e9331980363e24189ce\";module.bundle.HMR_BUNDLE_ID = \"01726d547d4dae758b3bc3d26d1f953d\";// @flow\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\n\nvar OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function(fn) {\n      this._acceptCallbacks.push(fn || function() {});\n    },\n    dispose: function(fn) {\n      this._disposeCallbacks.push(fn);\n    },\n  };\n  module.bundle.hotData = undefined;\n}\nmodule.bundle.Module = Module;\n\nvar checkedAssets /*: {|[string]: boolean|} */,\n  acceptedAssets /*: {|[string]: boolean|} */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return (\n    HMR_HOST ||\n    (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost')\n  );\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol =\n    HMR_SECURE ||\n    (location.protocol == 'https:' &&\n      !/localhost|127.0.0.1|0.0.0.0/.test(hostname))\n      ? 'wss'\n      : 'ws';\n  var ws = new WebSocket(\n    protocol + '://' + hostname + (port ? ':' + port : '') + '/',\n  );\n  // $FlowFixMe\n  ws.onmessage = function(event /*: {data: string, ...} */) {\n    checkedAssets = ({} /*: {|[string]: boolean|} */);\n    acceptedAssets = ({} /*: {|[string]: boolean|} */);\n    assetsToAccept = [];\n\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      removeErrorOverlay();\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      var handled = false;\n      assets.forEach(asset => {\n        var didAccept =\n          asset.type === 'css' ||\n          (asset.type === 'js' &&\n            hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle));\n        if (didAccept) {\n          handled = true;\n        }\n      });\n\n      if (handled) {\n        console.clear();\n\n        assets.forEach(function(asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe\n          ? ansiDiagnostic.codeframe\n          : ansiDiagnostic.stack;\n\n        console.error(\n          '🚨 [parcel]: ' +\n            ansiDiagnostic.message +\n            '\\n' +\n            stack +\n            '\\n\\n' +\n            ansiDiagnostic.hints.join('\\n'),\n        );\n      }\n\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  };\n  ws.onerror = function(e) {\n    console.error(e.message);\n  };\n  ws.onclose = function(e) {\n    if (process.env.PARCEL_BUILD_ENV !== 'test') {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  let errorHTML =\n    '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>\n          ${stack}\n        </pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>' + hint + '</div>').join('')}\n        </div>\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n\n  overlay.innerHTML = errorHTML;\n\n  return overlay;\n}\n\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function() {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute(\n    'href',\n    // $FlowFixMe\n    link.getAttribute('href').split('?')[0] + '?' + Date.now(),\n  );\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function() {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer =\n        hostname === 'localhost'\n          ? new RegExp(\n              '^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort(),\n            ).test(href)\n          : href.indexOf(hostname + ':' + getPort());\n      var absolute =\n        /^https?:\\/\\//i.test(href) &&\n        href.indexOf(window.location.origin) !== 0 &&\n        !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n    return;\n  }\n\n  let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n  if (deps) {\n    var fn = new Function('require', 'module', 'exports', asset.output);\n    modules[asset.id] = [fn, deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(\n  bundle /*: ParcelRequire */,\n  id /*: string */,\n  depsByBundle /*: ?{ [string]: { [string]: string } }*/,\n) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(module.bundle.root, id).some(function(v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function(cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function(cb) {\n      var assetsToAlsoAccept = cb(function() {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n  acceptedAssets[id] = true;\n}\n","/*! @license DOMPurify | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.2.2/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.DOMPurify = factory());\n}(this, function () { 'use strict';\n\n  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var hasOwnProperty = Object.hasOwnProperty,\n      setPrototypeOf = Object.setPrototypeOf,\n      isFrozen = Object.isFrozen,\n      getPrototypeOf = Object.getPrototypeOf,\n      getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n  var freeze = Object.freeze,\n      seal = Object.seal,\n      create = Object.create; // eslint-disable-line import/no-mutable-exports\n\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\n      apply = _ref.apply,\n      construct = _ref.construct;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n    };\n  }\n\n  var arrayForEach = unapply(Array.prototype.forEach);\n  var arrayPop = unapply(Array.prototype.pop);\n  var arrayPush = unapply(Array.prototype.push);\n\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\n  var stringMatch = unapply(String.prototype.match);\n  var stringReplace = unapply(String.prototype.replace);\n  var stringIndexOf = unapply(String.prototype.indexOf);\n  var stringTrim = unapply(String.prototype.trim);\n\n  var regExpTest = unapply(RegExp.prototype.test);\n\n  var typeErrorCreate = unconstruct(TypeError);\n\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n\n  /* Add properties to a lookup table */\n  function addToSet(set, array) {\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    var l = array.length;\n    while (l--) {\n      var element = array[l];\n      if (typeof element === 'string') {\n        var lcElement = stringToLowerCase(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n\n  /* Shallow clone an object */\n  function clone(object) {\n    var newObject = create(null);\n\n    var property = void 0;\n    for (property in object) {\n      if (apply(hasOwnProperty, object, [property])) {\n        newObject[property] = object[property];\n      }\n    }\n\n    return newObject;\n  }\n\n  /* IE10 doesn't support __lookupGetter__ so lets'\n   * simulate it. It also automatically checks\n   * if the prop is function or getter and behaves\n   * accordingly. */\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      var desc = getOwnPropertyDescriptor(object, prop);\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n\n      object = getPrototypeOf(object);\n    }\n\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n\n    return fallbackValue;\n  }\n\n  var html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  var svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n  var svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'feimage', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n\n  var mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\n  // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n  var mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n\n  var text = freeze(['#text']);\n\n  var html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n\n  var svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\n  var mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  var ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  function _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {Document} document The document object (to determine policy name suffix)\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported).\n   */\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    var suffix = null;\n    var ATTR_NAME = 'data-tt-policy-suffix';\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML: function createHTML(html$$1) {\n          return html$$1;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    var DOMPurify = function DOMPurify(root) {\n      return createDOMPurify(root);\n    };\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '2.2.9';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n\n      return DOMPurify;\n    }\n\n    var originalDocument = window.document;\n\n    var document = window.document;\n    var DocumentFragment = window.DocumentFragment,\n        HTMLTemplateElement = window.HTMLTemplateElement,\n        Node = window.Node,\n        Element = window.Element,\n        NodeFilter = window.NodeFilter,\n        _window$NamedNodeMap = window.NamedNodeMap,\n        NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n        Text = window.Text,\n        Comment = window.Comment,\n        DOMParser = window.DOMParser,\n        trustedTypes = window.trustedTypes;\n\n\n    var ElementPrototype = Element.prototype;\n\n    var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    var getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n      var template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n    var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';\n\n    var _document = document,\n        implementation = _document.implementation,\n        createNodeIterator = _document.createNodeIterator,\n        createDocumentFragment = _document.createDocumentFragment;\n    var importNode = originalDocument.importNode;\n\n\n    var documentMode = {};\n    try {\n      documentMode = clone(document).documentMode ? document.documentMode : {};\n    } catch (_) {}\n\n    var hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n\n    var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n        ERB_EXPR$$1 = ERB_EXPR,\n        DATA_ATTR$$1 = DATA_ATTR,\n        ARIA_ATTR$$1 = ARIA_ATTR,\n        IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n    var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n\n    /* Allowed attribute names */\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    var FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    var FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    var ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    var ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    var SAFE_FOR_TEMPLATES = false;\n\n    /* Decide if document with <html>... should be returned */\n    var WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    var SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    var FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    var RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    var RETURN_DOM_FRAGMENT = false;\n\n    /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n     * `Node` is imported into the current `Document`. If this flag is not enabled the\n     * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n     * DOMPurify.\n     *\n     * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`\n     * might cause XSS from attacks hidden in closed shadowroots in case the browser\n     * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/\n     */\n    var RETURN_DOM_IMPORT = true;\n\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    var RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks? */\n    var SANITIZE_DOM = true;\n\n    /* Keep element content when removing element? */\n    var KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    var IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    var USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    var FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    var DATA_URI_TAGS = null;\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    var URI_SAFE_ATTRIBUTES = null;\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n    var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n    var NAMESPACE = HTML_NAMESPACE;\n    var IS_EMPTY_INPUT = false;\n\n    /* Keep a reference to config to pass to hooks */\n    var CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    var _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n        cfg = {};\n      }\n\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html);\n          addToSet(ALLOWED_ATTR, html$1);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl);\n          addToSet(ALLOWED_ATTR, mathMl$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n\n    var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);\n\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n    var ALL_SVG_TAGS = addToSet({}, svg);\n    addToSet(ALL_SVG_TAGS, svgFilters);\n    addToSet(ALL_SVG_TAGS, svgDisallowed);\n\n    var ALL_MATHML_TAGS = addToSet({}, mathMl);\n    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n\n    /**\n     *\n     *\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n    var _checkValidNamespace = function _checkValidNamespace(element) {\n      var parent = getParentNode(element);\n\n      // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: HTML_NAMESPACE,\n          tagName: 'template'\n        };\n      }\n\n      var tagName = stringToLowerCase(element.tagName);\n      var parentTagName = stringToLowerCase(parent.tagName);\n\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        }\n\n        // The only way to switch from MathML to SVG is via\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        }\n\n        // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        }\n\n        // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        }\n\n        // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        // Certain elements are allowed in both SVG and HTML\n        // namespace. We need to specify them explicitly\n        // so that they don't get erronously deleted from\n        // HTML namespace.\n        var commonSvgAndHTMLElements = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n        // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n        return !ALL_MATHML_TAGS[tagName] && (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName]);\n      }\n\n      // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG or MathML). Return false just in case.\n      return false;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    var _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, { element: node });\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        try {\n          node.outerHTML = emptyHTML;\n        } catch (_) {\n          node.remove();\n        }\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    var _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name);\n\n      // We void attribute values for unremovable \"is\"\" attributes\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    var _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      var doc = void 0;\n      var leadingWhitespace = void 0;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\n        } catch (_) {}\n      }\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n        } catch (_) {\n          // Syntax error if dirtyPayload is invalid xml\n        }\n      }\n\n      var body = doc.body || doc.documentElement;\n\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n    var _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    var _isClobbered = function _isClobbered(elm) {\n      if (elm instanceof Text || elm instanceof Comment) {\n        return false;\n      }\n\n      if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function') {\n        return true;\n      }\n\n      return false;\n    };\n\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    var _isNode = function _isNode(object) {\n      return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], function (hook) {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\n      var content = void 0;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check if tagname contains Unicode */\n      if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      var tagName = stringToLowerCase(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName: tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          var parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          var childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n          if (childNodes && parentNode) {\n            var childCount = childNodes.length;\n\n            for (var i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check whether element has a valid namespace */\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n        content = stringReplace(content, ERB_EXPR$$1, ' ');\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        return false;\n\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {\n        return false;\n      }\n\n      return true;\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      var attr = void 0;\n      var value = void 0;\n      var lcName = void 0;\n      var l = void 0;\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      var attributes = currentNode.attributes;\n\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      var hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        attr = attributes[l];\n        var _attr = attr,\n            name = _attr.name,\n            namespaceURI = _attr.namespaceURI;\n\n        value = stringTrim(attr.value);\n        lcName = stringToLowerCase(name);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n          value = stringReplace(value, ERB_EXPR$$1, ' ');\n        }\n\n        /* Is `value` valid for this attribute? */\n        var lcTag = currentNode.nodeName.toLowerCase();\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      var shadowNode = void 0;\n      var shadowIterator = _createIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty, cfg) {\n      var body = void 0;\n      var importedNode = void 0;\n      var currentNode = void 0;\n      var oldNode = void 0;\n      var returnNode = void 0;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      IS_EMPTY_INPUT = !dirty;\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n\n      /* Check we can run. Otherwise fall back or ignore */\n      if (!DOMPurify.isSupported) {\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n          if (typeof dirty === 'string') {\n            return window.toStaticHTML(dirty);\n          }\n\n          if (_isNode(dirty)) {\n            return window.toStaticHTML(dirty.outerHTML);\n          }\n        }\n\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) ; else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : emptyHTML;\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\n          continue;\n        }\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n\n        oldNode = currentNode;\n      }\n\n      oldNode = null;\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (RETURN_DOM_IMPORT) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      var lcTag = stringToLowerCase(tag);\n      var lcName = stringToLowerCase(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n","const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'feimage',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    Text,\n    Comment,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML =\n    trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML('')\n      : '';\n\n  const { implementation, createNodeIterator, createDocumentFragment } =\n    document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n   * `Node` is imported into the current `Document`. If this flag is not enabled the\n   * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n   * DOMPurify.\n   *\n   * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`\n   * might cause XSS from attacks hidden in closed shadowroots in case the browser\n   * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/\n   */\n  let RETURN_DOM_IMPORT = true;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  let SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  const FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR)\n        : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR)\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS)\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: HTML_NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // Certain elements are allowed in both SVG and HTML\n      // namespace. We need to specify them explicitly\n      // so that they don't get erronously deleted from\n      // HTML namespace.\n      const commonSvgAndHTMLElements = addToSet({}, [\n        'title',\n        'style',\n        'font',\n        'a',\n        'script',\n      ]);\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG or MathML). Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    if (elm instanceof Text || elm instanceof Comment) {\n      return false;\n    }\n\n    if (\n      typeof elm.nodeName !== 'string' ||\n      typeof elm.textContent !== 'string' ||\n      typeof elm.removeChild !== 'function' ||\n      !(elm.attributes instanceof NamedNodeMap) ||\n      typeof elm.removeAttribute !== 'function' ||\n      typeof elm.setAttribute !== 'function' ||\n      typeof elm.namespaceURI !== 'string' ||\n      typeof elm.insertBefore !== 'function'\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = stringToLowerCase(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && regExpTest(DATA_ATTR, lcName)) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      return false;\n\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = stringTrim(attr.value);\n      lcName = stringToLowerCase(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = currentNode.nodeName.toLowerCase();\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* No special handling necessary for in-place sanitization */\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : emptyHTML;\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (RETURN_DOM_IMPORT) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = stringToLowerCase(tag);\n    const lcName = stringToLowerCase(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n"],"names":["hasOwnProperty","Object","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","Reflect","apply","construct","fun","thisValue","args","x","Func","arrayForEach","unapply","Array","prototype","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","addToSet","set","array","l","length","element","lcElement","clone","object","newObject","property","lookupGetter","prop","desc","get","value","fallbackValue","console","warn","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","_","createDOMPurify","DOMPurify","root","version","VERSION","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","RETURN_TRUSTED_TYPE","implementation","createNodeIterator","createDocumentFragment","importNode","documentMode","hooks","createHTMLDocument","EXPRESSIONS","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","CONFIG","formElement","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","commonSvgAndHTMLElements","_forceRemove","node","parentNode","removeChild","outerHTML","remove","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","_createIterator","call","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","childCount","i","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","undefined","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toString","toStaticHTML","appendChild","firstChild","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks"],"version":3,"file":"purify.6d1f953d.js.map","sourceRoot":"/__parcel_source_root/"}